touch "
"
export miert ne lehetne ezt is
env -i ./minishell | grep PWD
echo "env | /usr/bin/wc -l" | env -i $MINISHELL_PATH"/"$EXECUTABLE | grep PWD
echo $?
echo "ls" | env -i $MINISHELL_PATH"/"$EXECUTABLE | grep PWD
echo $?
echo "unset PATH" | env -i $MINISHELL_PATH"/"$EXECUTABLE | grep PWD
echo $?
/bin/env | grep "_="
/bin/env | grep "SHLVL"
cd ..$PWD
mkdir test
cd $PWD/test
cd..
rm -rf test
/bin/echo $PWD/random_folder
mkdir "tmp_test_folder"
/bin/echo $PWD
cd "tmp_test_folder"
/bin/echo $PWD
cd ..
/bin/echo $PWD
rm -rf "tmp_test_folder"
mkdir "tmp_test folder"
/bin/echo $PWD
cd "tmp_test folder"
cd ..
/bin/echo $PWD
rm -rf "tmp_test folder"
ls | cat << stop | grep "asd"
ls | cat << stop | ls -la | cat << stop1
ls | cat << stop | ls -la | cat << stop1 | ls | cat << stop2 | ls -la > out | cat << 'stop3'
ls | cat << stop | ls -la | cat << stop1 | ls | cat << stop2 | ls -la > > out | cat << stop3
ls | cat << stop | ls -la > out0| cat << stop1 | ls | cat << stop2 | ls -la >> out | cat << stop3
cat
cat | ls
<file1 <file2 <<here1 <<here2 cmd
cat <<eof  | cat -e
cat <<eof >file1 | cat -e
cat <<eof | cat
cat <<eof | cat <<EOF
echo hello >/dev/stdout | cat
echo hello >/dev/stdout | cat <<eof <<EOF
./minishell
./tinyshell
./bash
exit | exit
ls ctrl C
minishell
tinyshell
>
>>
> >
<<
> ; ls
>file1
eof
<<eof
<<eof cat
<<eof ;;
;; <<eof
cat << EOF > output.txt
cat << DELIM << END
cat << 'QUOTE' # testing quoted delimiters
cat << heredoc < file_existe_pas
cat << heredoc <file_existe_pas
<< hello
<< HELLO
cat << 1
cat << 1 << 2 << 3
cat <<1 <<2 <<3
cat << hello | wc -l
<infile grep hello | wc -l >1>2>3

command series
#
cat << $USER
k
k
k
$USER
#

#
cat << "$USER"
kkk
"$USER"
#
cd /notsuchdir
/bin/ls

cd /////
/bin/ls

cd "cmds/"
/bin/ls

cd cmds/
/bin/ls

cd ./cmds/
/bin/ls

mkdir bla_test
chmod -wrx bla_test
cd bla_test
chmod +wrx bla_test
rm -r bla_test

pwd

cd $HOME
pwd

pwd pwd

pwd hello

unset PATH
pwd

unset PATH
cd /bin
ls

unset PATH
cd /bin/../bin/
ls

unset PATH
cd /bin/../bin/../bin/../bin/../bin/../bin/../bin/../bin/
../bin/../bin/ls

unset PATH
cd /bin/
sleep 2

mkdir tmp_path_test1 tmp_path_test2
printf '#include <unistd.h>\nint main(){write(1, \"1\\n\", 2);}' > tmp_path_test1/test1.c
gcc tmp_path_test1/test1.c -o tmp_path_test1/a.out
printf '#include <unistd.h>\nint main(){write(1, \"2\\n\", 2);}' > tmp_path_test2/test2.c
gcc tmp_path_test2/test2.c -o tmp_path_test2/a.out
export PATH=tmp_path_test1:tmp_path_test2
a.out
export PATH=tmp_path_test2:tmp_path_test1
a.out
/bin/rm -rf tmp_path_test1 tmp_path_test2

### REDIRS

### PIPES

### GO WILD

### ENV Var expansion

export a="asd"

export a="asd" b="de" o= c="hellomi" X

export miert ne lehetne ezt is

export a="asd"
unset a

export a="asd" b="de" o= c="hellomi" X
unset o

export a="asd" b="de" o= c="hellomi" X
unset X

export a="asd" b="de" o= c="hellomi" X
unset o a X b c

export a="asd" b="de" o= c="hellomi" X
unset o asd B x X wqd c

export T=a T=b T=c
echo $T

export miert ne lehetne ezt is

export a="asd" b="de" o= c="hellomi" X
unset o
export a="asd" b="de" o= c="hellomi" X
unset X
export a="asd" b="de" o= c="hellomi" X
unset o a X b c
export a="asd" b="de" o= c="hellomi" X
unset o asd B x X wqd c
export T=a T=b T=c
echo $T
export a="asd" b="de" o= c="hellomi" X
export miert ne lehetne ezt is
touch "
"
/bin/rm -f "
"

awk '$1 ~ /^d/ {print $9}'

awk 'BEGIN{for(i=1;i<=10;i++){for(j=1;j<=10;j++){printf("%4d ",i*j)} printf("\n")}}' /dev/null | tail -n 10

awk 'BEGIN{for(i=1;i<=1000000;i++)print int(i)}' | awk '{sum+=$1} END {print sum/NR}'

### HERE_DOC ###
### HERE_DOC ###
cat << lim
 "lim"
HELLO
42
 lim
testing your minishell
limm
lim

<<lim cat
 "lim"
HELLO
42
 lim
testing your minishell
limm
lim

cat << lim
test
lim

cat << EOF
"EOF"
!! HELLO
@42 !!
 EOF\t\b\n
testing your minishell :)
limm
EOF

cat << hello
$USER
$NOVAR
$HOME
hello

cat << 'lim'
$USER
$NOVAR
$HOME
lim

cat << lim''
$USER
$NOVAR
$HOME
lim

cat << "lim"
$USER
$NOVAR
$HOME
lim

cat << 'lim'
$USER
$NOVAR
$HOME
lim

> out
/bin/rm -f out

< out
/bin/rm -f out

>> out
/bin/rm -f out

export T="echo segfault | grep segfault"
$T

export T=nnnnnnnn
echo "-"'$T'nnnnnnnnnnnnn -nnnnnnnn'$T' '-'"$T "

export T=nnnnnnnn
echo "-"'$T'nnnnnnnnnnnnn -nnnnnnnn$T '-''$T '

export T=ech
echo $T"o "

export T=ech
echo $T"o -n"

export T=ech
echo $T"o -n"

export T=ech
echo $T'o'

export T="-n test1 -n test 2"
echo $T

export T=ech
echo $T'o '

cat << $USER
why
not
$USER

export T=">>"
$T lol

cat << "$USER"
why
not
$USER

cat << "$US"E"R"
because
we
love
bash
$USER

